/**
 * @(#)CardMatching.java
 *
 *
 * @author 
 * @version 1.00 2016/5/13
 */

import java.applet.Applet;
import java.awt.*;

public class CardMatching extends Applet{

  Deck gameDeck;
  Image [] cardImgs;
  MatchingGrid [] grid;
  Image backSide;
  int checking = 1;
  int cardsChosen;
  int thisCard = 0;
  int lastCard = 0;
  
  

  public void init()
  {
    cardsChosen = 0;
    backSide =  getImage(getDocumentBase(),"Cards/BackCardRed.jpg");
    gameDeck = new Deck();
    //gameDeck.shuffle();
    cardImgs = new Image[52];
    grid = new MatchingGrid[52];
    for(int i=0;i<52;i++)
    {  
      int xPos = (i%13)+1;
      int yPos = i/13;
      cardImgs[i] = getImage(getDocumentBase(),gameDeck.getNextCard().getLocation());
      grid[i] = new MatchingGrid(xPos*80,yPos*150,70,140);
    }
  }
    
  public void paint(Graphics g)
  {
    
    
    Expo.drawString(g,"Cards Matched: "+thisCard,100,620);
    
    
    
    for(int i=0;i<52;i++)
    {
      int xPos = (i%13)+1;
      int yPos = i/13;   
      g.drawImage(backSide,xPos*80,yPos*150,70,140,this);
      if(grid[i].isFlipped())
      { 
        g.drawImage(cardImgs[i],xPos*80,yPos*150,70,140,this);
      }
      
    }
    
    if(MatchingGrid.amtMatched==52)
    {
      Expo.drawString(g,"YOU WIN",100,620);
    }
    
  }
    
  public boolean mouseDown(Event e, int x, int y)
  {  
    for(int i = 0; i<grid.length; i++)
    {                      
      if(grid[i].inside(x,y) && !grid[i].flipped)
      {
        if(cardsChosen == 0)
        {
          lastCard = i;
        }
        else if(cardsChosen == 1)
        {
          thisCard = i;
        }
        checking *=-1;
        grid[i].flip();
        if(grid[i].flipped){cardsChosen++;}
      }
      
      if(cardsChosen>2)
      {
        cardsChosen=0;
        if(isMatched(lastCard,thisCard) && (thisCard+lastCard)>0)
        {
          grid[lastCard].matched = true;
          grid[thisCard].matched = true;
          MatchingGrid.amtMatched+=2;
        }
        for(int c=0;c<52;c++)
        {
          if(!grid[c].isMatched() &&  grid[c].isFlipped() )
          {  
            grid[c].flip();

          }  
        }
      } 
    }
    
    repaint();
    return true;
  }
      
  public boolean isMatched(int f, int s)
  {
    if(gameDeck.deck[f].getRank() == gameDeck.deck[s].getRank())
      return true;
    else
    return false;
  }
      
      
}